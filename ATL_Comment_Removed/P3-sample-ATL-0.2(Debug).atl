module ATL2BindingDebugger;

create OUT : ATL refining IN : ATL;



rule Module {

  from

    s : ATL!Module

  to

    t : ATL!Module (

      name <- s.name.debug('Module.t.name'),

      libraries <- s.libraries.debug('Module.t.libraries'),

      isRefining <- s.isRefining.debug('Module.t.isRefining'),

      inModels <- s.inModels.debug('Module.t.inModels'),

      outModels <- s.outModels.debug('Module.t.outModels'),

      elements <- s.elements.debug('Module.t.elements')

    )

}



rule Binding {

  from

    s : ATL!Binding

  to

    t : ATL!Binding (

      propertyName <- s.propertyName.debug('Binding.t.propertyName'),

      value <- debugger.debug('Binding.t.value')

    ),

    debugger : ATL!OperationCallExp (

      source <- s.value.debug('Binding.debugger.source'),

      operationName <- 'debug'.debug('Binding.debugger.operationName'),

      arguments <- Sequence {arg}.debug('Binding.debugger.arguments')

    ),

    arg : ATL!StringExp (

      stringSymbol <- (s.outPatternElement.outPattern."rule".name + '.' + s.outPatternElement.varName + '.' + s.propertyName).debug('Binding.arg.stringSymbol')

    )

}

