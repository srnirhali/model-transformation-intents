

module PrimaryKey; 

create OUT : KM3target from IN : KM3;



rule Metamodel {

	from

		inputMm:KM3!Metamodel

	to

		outputMm:KM3target!Metamodel (

			location <- inputMm.location,

			contents <- inputMm.contents

		)

}



rule Package {

	from

		inputPkg:KM3!Package

	to

		outputPkg:KM3target!Package (

			name <- inputPkg.name,

			contents <- inputPkg.contents

		)

}



rule Class {

	from

		inputA:KM3!Class 

	to

		outputA:KM3target!Class (

			name <- inputA.name,

			isAbstract <- inputA.isAbstract,

			structuralFeatures <- inputA.structuralFeatures

		),



		key:KM3target!Attribute (

			name <- inputA.name.toLower()+'Key',

			isOrdered <- false,

			isUnique <- false,

			location <- '',

			lower <- 1,

			upper <- 1,

			type <- KM3!DataType.allInstances()->select(a|a.name = 'Integer')->first(),

			owner <- outputA

		)

}



rule DataType {

from

		inputData:KM3!DataType

	to

		outputData:KM3target!DataType(

			name <- inputData.name,

			location <- inputData.location

		)

}

